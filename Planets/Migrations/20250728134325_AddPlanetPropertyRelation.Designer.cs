// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Planets.Models;

#nullable disable

namespace Planets.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250728134325_AddPlanetPropertyRelation")]
    partial class AddPlanetPropertyRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("Planets.Models.Planet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("Planets.Models.PlanetProperty", b =>
                {
                    b.Property<int>("PlanetId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PropertyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("PlanetId", "PropertyId");

                    b.HasIndex("PropertyId");

                    b.ToTable("PlanetProperties");
                });

            modelBuilder.Entity("Planets.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Planets.Models.PlanetProperty", b =>
                {
                    b.HasOne("Planets.Models.Planet", "Planet")
                        .WithMany("PlanetProperties")
                        .HasForeignKey("PlanetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Planets.Models.Property", "Property")
                        .WithMany("PlanetProperties")
                        .HasForeignKey("PropertyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Planet");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Planets.Models.Planet", b =>
                {
                    b.Navigation("PlanetProperties");
                });

            modelBuilder.Entity("Planets.Models.Property", b =>
                {
                    b.Navigation("PlanetProperties");
                });
#pragma warning restore 612, 618
        }
    }
}
